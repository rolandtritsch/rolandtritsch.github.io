<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open-Source on tedn.life</title>
    <link>http://tedn.life/tags/open-source/</link>
    <description>Recent content in Open-Source on tedn.life</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Aug 2020 16:11:59 +0100</lastBuildDate>
    <atom:link href="http://tedn.life/tags/open-source/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commercial Open Source for Apache Projects - Survival of the fittest</title>
      <link>http://tedn.life/2009/01/22/commercial-open-source-for-apache-projects-survival-of-the-fittest/</link>
      <pubDate>Thu, 22 Jan 2009 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2009/01/22/commercial-open-source-for-apache-projects-survival-of-the-fittest/</guid>
      <description>Just found &lt;a href=&#34;http://www.freedomoss.com&#34;&gt;another company&lt;/a&gt; offering commercial support for Apache ServiceMix and Apache ActiveMQ (&lt;a href=&#34;http://fusesource.com/&#34;&gt;like we do :)&lt;/a&gt;). For me this is good news. It shows that more and more people use Apache integration projects in mission-critical deployment scenarios. And that these deployments generate enough value for customers to warrant an &#34;insurance&#34; against worst-case scenarios. &lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For me it was never the goal to be the only company to offer consulting, training and support for Apache integration projects. My goal was (and will always be) to provide the &#34;best&#34; (read most valuable) consulting, training and support offerings you can get for these projects.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Luckily Progress shares this ambition. This year we will increase the revenue we generate with FUSE (and the budget that comes with it) by roughly 200%. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Statements like &lt;a href=&#34;http://www.freedomoss.com/freeesb&#34;&gt;this&lt;/a&gt; ...&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;span&gt;&lt;span&gt;&lt;br /&gt;&#34;With the recent announcement of Progress Software acquiring Iona Technologies, Freedom OSS believes that professional support for Servicemix ESB and Active MQ will be dropped from IONA/Fuse.&#34;&lt;/span&gt;&lt;/span&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;... can safely be considered FUD.&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Apache CXF vs. Axis 2 - The current state of affairs or The missing book</title>
      <link>http://tedn.life/2008/12/07/apache-cxf-vs.-axis-2-the-current-state-of-affairs-or-the-missing-book/</link>
      <pubDate>Sun, 07 Dec 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/12/07/apache-cxf-vs.-axis-2-the-current-state-of-affairs-or-the-missing-book/</guid>
      <description>(Blogging from the plane again. This time on my way to the Progress &lt;br /&gt;Sales Kickoff in Miami.)&lt;p&gt;The other day I stumbled over a &lt;a href=&#34;http://www.slideshare.net/itemis/axis2-vs-cxf-high-noon-apache-presentation/&#34;&gt;good presentation&lt;/a&gt;&lt;br /&gt;from &lt;a href=&#34;http://www.falkoriemenschneider.de/index.html&#34;&gt;Falko Riemenschneider&lt;/a&gt;. The high-level summary is ...&lt;/p&gt;&lt;p&gt;* Axis 2 is not as easy to use as CXF, but is more ubiquitous in the &lt;br /&gt;marketplace (and got better documentation, including a book in german)&lt;br /&gt;* CXF is a very well developed piece of software, but needs more &lt;br /&gt;people using it (and needs more/better documentation, including a book &lt;br /&gt;in any language, but preferably in english)&lt;/p&gt;</description>
    </item>
    <item>
      <title>FUSE on the german autobahn - listing to a CAOS podcast</title>
      <link>http://tedn.life/2008/11/25/fuse-on-the-german-autobahn-listing-to-a-caos-podcast/</link>
      <pubDate>Tue, 25 Nov 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/11/25/fuse-on-the-german-autobahn-listing-to-a-caos-podcast/</guid>
      <description>For private reasons I had/have to spend some time in Germany these days. The house of my parents is about 45 mins away from the office, means I get to listen to some podcasts while I am doing 160 miles/hour on the german autobahn. One of my favorite podcasts is the &lt;a href=&#34;http://caostheory.libsyn.com/&#34;&gt;CAOS Theory podcast&lt;/a&gt; from the 451 Group.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Yesterday I was listening to &lt;a href=&#34;http://caostheory.libsyn.com/index.php?post_id=400761&#34;&gt;one&lt;/a&gt; that discussed the current state of affairs with respect to the Open Source Middleware space. One of the conclusions was that FUSE will probably benefit from the Progress acquisition, because Progress made a clear commitment to Open Source and will increase the investment in FUSE.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Just for the record: These conclusions are correct.&lt;/div&gt;</description>
    </item>
    <item>
      <title>Open Core Licensing - moving from &#34;bait-and-switch&#34; to &#34;suggest-and-complement&#34;</title>
      <link>http://tedn.life/2008/11/11/open-core-licensing-moving-from-bait-and-switch-to-suggest-and-complement/</link>
      <pubDate>Tue, 11 Nov 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/11/11/open-core-licensing-moving-from-bait-and-switch-to-suggest-and-complement/</guid>
      <description>The Open Core Licensing &lt;a href=&#34;http://blogs.the451group.com/opensource/2008/09/10/managing-expectations-with-open-core-licensing/&#34;&gt;discussion&lt;/a&gt; is really refreshing! Lots of good ideas and lots of good energy. Obviously the &#34;earlier&#34; versions of the model were more oriented towards a &#34;bait-and-switch&#34; approach (get a good stack for free, but then if you want to do real/serious enterprise computing, you have to to buy the real thing :)). Right now the models have evolved into more mature &#34;suggest-and-complement&#34; models (aka. Open Core Licensing). And I am using the word &#34;mature&#34;, because talking about it (the desire the make money with open source) like this, should be the norm and not the exception.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Yes, I am working for Progress (the &lt;a href=&#34;http://www.progress.com/index.ssp&#34;&gt;software company&lt;/a&gt;, not the &lt;a href=&#34;http://ecprogressview.electrolux.se/international_english/node15.asp&#34;&gt;vacuum cleaners&lt;/a&gt; :)) and we have an Open Core Licensing Strategy (looking into the &#34;Open Source is not a Business Model&#34; &lt;a href=&#34;http://blogs.the451group.com/opensource/2008/10/13/open-source-is-not-a-business-model/&#34;&gt;report&lt;/a&gt; it is debatable, if Progress (formerly known as IONA) may also fall into the open-closed category) and I am proud of it.&#xA;&#xA;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The important part for me is freedom (of choice for customers) and value (for customers). We are &lt;span class=&#34;Apple-style-span&#34; style=&#34;font-weight: bold;&#34;&gt;suggesting&lt;/span&gt; to use our integration-core, -platform, -stack (whatever you want to call it) to do JAVA-based integration and if you are happy with it, we are happy too. We then offer consulting, training and support for it (by the way, our distribution is called &lt;a href=&#34;http://fusesource.com/&#34;&gt;FUSE&lt;/a&gt;), but the choice is always yours. It is complete and has a value on its own. There are no &#34;hidden features&#34;, that will cripple the distribution to create an &#34;artificial&#34; up-sell opportunity.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;There you have it. Great value for money.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But wait there is more: We already have or will integrate this core with lots of interesting add-ons, which will &lt;span class=&#34;Apple-style-span&#34; style=&#34;font-weight: bold;&#34;&gt;complement&lt;/span&gt; the core and will make the resulting platform even more valuable (e.g. Mainframe integration, C++ integration, .Net integration, data integration, ...). And yes, we are looking for ways to get our fair share of the generated end-customer value. But that should be a win-win. The secret is in the add-ons. They must bring a significant, additional, unique value to the table, that would otherwise be hard to get (e.g. implementing it yourself :)). If the add-ons are structured like this, everybody will be happy to pay money for it/them (given you need them :)).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;And there you have it again. Even more value for money.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But the biggest value of all is for me that with this model customers stay in control. It is a pay-as-you-go model, means nobody is forced to spend large sums of money upfront to get something done. And this creates good, value-oriented, customer-vendor relationships. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I like it. &lt;/div&gt;</description>
    </item>
    <item>
      <title>Open Source Marketing - and what it got to do with the Michelin brothers</title>
      <link>http://tedn.life/2008/11/11/open-source-marketing-and-what-it-got-to-do-with-the-michelin-brothers/</link>
      <pubDate>Tue, 11 Nov 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/11/11/open-source-marketing-and-what-it-got-to-do-with-the-michelin-brothers/</guid>
      <description>Open Core Licensing and the business model behind it is not (really) new. When you look at it from a history/marketing point of view there are lots of examples, where money is/was made with a &#34;handle-blade&#34; model.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;From a marketing point of view the most famous example is probably Gillette. They give away the handles and make a lot of money with the blades. This works because they have a very strong brand and because they &#34;own&#34; the &lt;a href=&#34;http://www.weeklygripe.co.uk/a156.asp&#34;&gt;interface&lt;/a&gt; between the handle and the blade.&#xA;&#xA;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Open Core Licensing uses some aspects of this idea. It gives way the core (handle) and wants to make money with add-ons (blades), but there are also a couple of very significant differences.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;First, the handle in the Open Core Licensing model has a value on its own. You can use it to shave yourself. It is working. Out of the box. No blade needed.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Second, Open Source customers would probably never accept a handle, with a proprietary  &#34;PlugIn-API&#34;, which would force you to buy your blades from &#34;a/the&#34; company that owns that interface.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Means the blade-handle picture is going to get us only so far.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But there are other pictures we might want to take a look at that do not need a &#34;proprietary&#34; interface. In 1850 two brothers were running a rubber factory in Clermont-Ferrand. They were called &lt;a href=&#34;http://en.wikipedia.org/wiki/Michelin&#34;&gt;Eduard and Andre Michelin&lt;/a&gt;. The business was not going well, because producing rubber was getting commoditized, resulting in lots of competition and low margins. But then they had a good idea and a brilliant idea. First they realized that making rubber is not good enough anymore, but that they knew a lot about rubber and they figured that they could become their own customers and build something out of rubber. But what? This is where genius struck the first time: They realized that cars and bicycles would benefit from rubber tyres. The beauty of it is that you sell a blade (tyre) on a handle (car) that will wear-off when you use it. And this is were genius struck a second time. Eduard and Andre concluded that they have to find a way to make people drive and what better reason there is for driving than food or even better good food. As result they decided to put together and publish a &lt;a href=&#34;http://en.wikipedia.org/wiki/Michelin_Guide&#34;&gt;guide&lt;/a&gt; on (good) restaurants and give away this guide for free (at least initially). What a brilliant idea!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Again Open Core Licensing uses some aspects of this idea, but not all of them. The main point is that Michelin did not own the interface, means they expected that sooner or later more people will be able to copy-cat their idea and produce tyres. As a result they focuses much more on making the car a success and making people drive, betting on the fact that they had an (first-mover) advantage in the resulting tyre market, because they were the first ones in the market and that they could make more money being &#34;a&#34; player in large market, rather than being &#34;the&#34; (only) player in a small market. To map this to Open Core Licensing we maybe have to think up-side down, means the integration market is the car and we have valuable add-ons (tyres) for this market, that people occasionally buy. How about creating a guide/solution for good integration, that will make people integrate systems? And give it away for free and benefit from the resulting (larger) integration market?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Again this picture is only going to get us so far, but it can at the same time give interesting insights into the dynamics of open source business models.&lt;/div&gt;&lt;div&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Open Source Business Models - Open-Core Licensing</title>
      <link>http://tedn.life/2008/09/02/open-source-business-models-open-core-licensing/</link>
      <pubDate>Tue, 02 Sep 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/09/02/open-source-business-models-open-core-licensing/</guid>
      <description>OH NO, please!!! YABOOSBM!!! Yet another blog entry on open-source business models :).&lt;br /&gt;&lt;br /&gt;Ok, let&#39;s make it as short and as sweet as possible :).&lt;br /&gt;&lt;br /&gt;This morning I was reading &lt;a href=&#34;http://blogs.the451group.com/opensource/2008/09/01/andrew-lampitt-defines-open-core-licensing/&#34;&gt;Matt Aslett&#39;s comment&lt;/a&gt; on &lt;a href=&#34;http://alampitt.typepad.com/lampitt_or_leave_it/2008/08/open-core-licen.html&#34;&gt;Andrew Lampitt&#39;s blog&lt;/a&gt; entry on &#34;Open-Core&#34; licensing (which actually contains a link to a good &lt;a href=&#34;http://stephesblog.blogs.com/presentations/MySQL_OSBC_200705_handout.pdf&#34;&gt;presentation&lt;/a&gt; by MySQL chief Marten Mickos).&lt;br /&gt;&lt;br /&gt;What I like about the approach is that it tries to take the emotion out of the discussion. We obviously all know in our head that open-source is about free speech and not free beer, but the heart then still reacts (at least sometimes) disappointed, when companies show that they are not pursuing  an open-source strategy for purely philosophical and/or altruistic reasons. In that context some of the hybrid models (e.g. selling closed-source features on top of a open-source core) got a bad reputation and got dismissed as &#34;bait-and-switch&#34; models.&lt;br /&gt;&lt;br /&gt;The value of open-source is NOT in the absence of a desire to make money with it. This is actually healthy and will make sure the approach/model with survive in the long-run.&#xA;&#xA;&lt;br /&gt;&lt;br /&gt;For me an interesting value of open-source is that it redefines the customer-vendor relationship. It creates a very open, honest pay-as-you-go relationship. Customers are not forced to give large sums of money to a vendor up-front and trust the vendor that it will do the right things with this money. Open-source is the ultimate customer empowerment tool (within limits as discussed by &lt;a href=&#34;http://blogs.the451group.com/opensource/2008/08/28/hell-freezes-over-matt-asay-on-the-problem-of-open-source-revenue-models/&#34;&gt;Matt Asay&lt;/a&gt;).&lt;br /&gt;&lt;br /&gt;A very interesting side effect of this is that it allows the CFO to shift money from his capital expense budget to his operational expense budget, which in general makes his business more manageable.&lt;br /&gt;&lt;br /&gt;These are good reasons for open-source. And yes, to keep it alive, we have to find ways to make money with it and share the ROI over the entire delivery/value-chain.&lt;br /&gt;&lt;br /&gt;Shortening the list of open-source business models in Marten&#39;s presentation, I right now see the following main models in the market:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Open-Core Model - have an open-source core and sell closed-source features on top of it (e.g. SugarCRM)&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Dual Licensing Model- one product/project that gets licensed with a viral, GPL-style license and a commercial closed-source license (e.g. MySQL)&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Services Models - where you get to download a productized version of an open-source project and pay a fee for the support you get on it&lt;/li&gt;&lt;/ul&gt;All of these (and variations/combinations of these) are good valid models, which can deliver a lot of value to customers.&lt;br /&gt;&lt;br /&gt;It remains to be seen, which one will proof to be the most innovative one.</description>
    </item>
    <item>
      <title>Open Source Innovation - Fact or Fiction</title>
      <link>http://tedn.life/2008/08/25/open-source-innovation-fact-or-fiction/</link>
      <pubDate>Mon, 25 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/08/25/open-source-innovation-fact-or-fiction/</guid>
      <description>Is Open Source Innovation an oxymoron? Is Open-source fostering innovation or killing it?&lt;br /&gt;&lt;br /&gt;There are two school of thoughts out there: First, there are lots of people, who say that open-source is not fostering innovation or even killing it, because it is just about the reimplementation of already solved problems and that it actually kills innovation, because it keeps people from implementing solutions that can not be protected from being reimplemented as an open-source solution. Second there are at least as many people, who say that open-source is actually creating/fostering innovation, because a company can not hide behind a bad implementation and will always be forced to look for ways to make its solution better, faster and more affordable.&#xA;&#xA;&lt;br /&gt;&lt;br /&gt;Let&#39;s first contemplate on the nature of innovation. As &lt;a href=&#34;http://www.tritsch.org/Blog/2008/04/colossus-of-rhodes.html&#34;&gt;previously discussed&lt;/a&gt; there is a difference between innovation and creativity: You can ask people to be creative, but you can&#39;t really ask them to be innovative, because innovation is something that get&#39;s established after the fact, means it get&#39;s established by the traction you get with your ideas in a give business context and the impact they have on the business and the market.&lt;br /&gt;&lt;br /&gt;I personally believe that you cannot orchestrate or manage or create innovation. It just happens. It happens in a more darwinistic way: Through diversity/competition/mutation and selection. What you can do is to create an environment, which cherishes  diversity/creativity and competition. This will increase the likelyhood that some of your ideas turn into real innovation. In that context you probably want to set up a number of small units to shoot at the same target and want to make them compete for the best implementation. This is why open-source is innovative and/or creates innovation. It is not the a/the project that is innovative. It is the competition between the projects that creates the innovation. One good discussion on this can be found in &lt;a href=&#34;http://www.dreamsongs.com/IHE/IHE.html&#34;&gt;&#34;Innovation Happens Elsewhere, by Ron Goldman and Richard P. Gabriel&#34;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;One other way to put more structure into the discussion is to segment innovation into ...&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Business Model Innovation - a new creative way to make money with something (might be closed-source or open-source)&lt;/li&gt;&lt;li&gt;Solution Innovation - a new creative way to solve a given (old or new) problem&lt;/li&gt;&lt;li&gt;Implementation Innovation - a new creative way to implement a given solution&lt;/li&gt;&lt;/ul&gt;Open-source is clearly a good fit to drive implementation innovation. If you do not like a given implementation, you can always take the source code and make it better or even reimplement a given solution (e.g. a customer relationship management solution) or a given standard (e.g. JBI) with a new implementation.&lt;br /&gt;&lt;br /&gt;Question is, if open-source and/or open-source concepts are also suitable to drive solution- and/or business-model-innovation? This leads to the next bigger question: In the past the value of a company was determined by the solutions they own. This is why pharmaceutical companies try to protect their products with patents and other means. I am not sure that will stay this way going forward. Instead we might see a world in which your solutions matter less, but your ability to detect problems and develop solutions will determine the value of your company to a much larger extend.&lt;br /&gt;&lt;br /&gt;In such a world, open-source concepts might actually be very suitable to foster innovation on the solution level.</description>
    </item>
    <item>
      <title>Software Engineering Radio - talking about OSGi, Rest, Opensource, ...</title>
      <link>http://tedn.life/2008/06/23/software-engineering-radio-talking-about-osgi-rest-opensource-.../</link>
      <pubDate>Mon, 23 Jun 2008 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2008/06/23/software-engineering-radio-talking-about-osgi-rest-opensource-.../</guid>
      <description>In the last four weeks a lot of people asked me about this &#34;show&#34; I am listening to on my way to work. It is called &lt;a href=&#34;http://www.se-radio.net/&#34;&gt;Software Engineering Radio&lt;/a&gt; and talks about trends and technologies in Software Engineering (&lt;a href=&#34;http://www.se-radio.net/podcast/2007-12/episode-80-osgi-peter-kriens-and-bj-hargrave&#34;&gt;OSGi&lt;/a&gt;, &lt;a href=&#34;http://www.se-radio.net/podcast/2008-05/episode-98-stefan-tilkov-rest&#34;&gt;Rest&lt;/a&gt;, &lt;a href=&#34;http://www.se-radio.net/podcast/2008-04/episode-94-open-source-business-models-dirk-riehle&#34;&gt;Opensource&lt;/a&gt;, ...). I was told that one of the next issues will be an interview with Peter Kriens on the current state of affairs with respect to OSGi.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Check it out. &lt;/div&gt;</description>
    </item>
  </channel>
</rss>

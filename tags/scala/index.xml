<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on tedn.life</title>
    <link>http://tedn.life/tags/scala/</link>
    <description>Recent content in Scala on tedn.life</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 02 Jun 2021 07:15:02 +0100</lastBuildDate>
    <atom:link href="http://tedn.life/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Effective Programming with Scala(3)</title>
      <link>http://tedn.life/2021/06/02/effective-programming-with-scala3/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2021/06/02/effective-programming-with-scala3/</guid>
      <description>&lt;p&gt;Just finished the brand new &lt;a href=&#34;https://www.coursera.org/learn/effective-scala&#34;&gt;Effective Programming with Scala&lt;/a&gt; course on Coursera.&lt;/p&gt;&#xA;&lt;img src=&#34;http://tedn.life/images/2021-06-02-effective-scala/cert.png&#34; style=&#34;display:block; margin-right:auto; margin-left:auto;&#34; width=&#34;80%&#34; hspace=&#34;1%&#34; vspace=&#34;1%&#34;/&gt;&#xA;&lt;p&gt;It is a beginners course and it is excellent for beginners. Good introduction to Scala and also into the basics of functional programming.&lt;/p&gt;&#xA;&lt;p&gt;But &amp;hellip; for me the main attraction was that the course is based on (and is using) Scala3, means even if you are a seasoned Scala2 software engineer (and/or have not written Scala code in a while), this course is an excellent refresher that will allow you to grasp the essence of why/how Scala3 is different from Scala2 in the shortest possible time (I was playing the videos on 2x and was able to do all 6 weeks in 6x3=18 hours; and used the exercices to make my IDE (emacs/metals) work with Scala3).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Some more fun with Scala3</title>
      <link>http://tedn.life/2021/05/15/some-more-fun-with-scala3/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2021/05/15/some-more-fun-with-scala3/</guid>
      <description>&lt;p&gt;Scala3 is &lt;a href=&#34;https://www.scala-lang.org/blog/2021/05/14/scala3-is-here.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In my earlier &lt;a href=&#34;https://tedn.life/2021/05/01/more-fun-with-scala3&#34;&gt;post&lt;/a&gt; I saw some weird performance differences between Scala2 and Scala3 (RC3) and felt (obviously) compelled to run &lt;a href=&#34;https://docs.google.com/spreadsheets/d/14wLxVAdPpnWcp2c7Sy_tr6PVnBUU17fx39EExUrtbfs/edit?usp=sharing&#34;&gt;the benchmark again&lt;/a&gt; against 3.0.0.&lt;/p&gt;&#xA;&lt;img src=&#34;http://tedn.life/images/2021-05-01-more-scala3/bench2.png&#34; style=&#34;display:block; margin-right:auto; margin-left:auto&#34; width=&#34;80%&#34; hspace=&#34;1%&#34; vspace=&#34;1%&#34;/&gt;&#xA;&lt;p&gt;And &amp;hellip; big surprise: Everything is back to normal. Scala3 is as fast as Scala2.&lt;/p&gt;&#xA;&lt;p&gt;The big differences come from very small numbers (e.g. Day13). The biggest (reproducible) differences is on Day3(part1): 112 msecs vs. 255 msecs. If I am getting really bored one day I might take a look at it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>More fun with Scala3</title>
      <link>http://tedn.life/2021/05/01/more-fun-with-scala3/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2021/05/01/more-fun-with-scala3/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note: Look &lt;a href=&#34;https://tedn.life/2021/05/15/some-more-fun-with-scala3&#34;&gt;here&lt;/a&gt; for 3.0 benchmark numbers&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The release of Scala3 is &lt;a href=&#34;https://contributors.scala-lang.org/t/scala3-rc3-is-planned/5006&#34;&gt;imminent&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In April I ported/migrated &lt;a href=&#34;https://github.com/NinesStack/nmesos&#34;&gt;nmesos&lt;/a&gt; from Scala2 to Scala3 and I just did a quick benchmark to see what Scala3 is doing to my &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent-of-Code&lt;/a&gt; implementation from &lt;a href=&#34;https://github.com/rolandtritsch/scala-aoc-2017/tree/scala3&#34;&gt;2017&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Initially I was wondering (and maybe a little bit afraid) how difficult migrating to Scala3 will be (and what problems I will be running into).&lt;/p&gt;&#xA;&lt;p&gt;The good news is that migrating to Scala3 is not difficult at all. Mainly because of the Scala2/Scala3 &lt;a href=&#34;https://docs.scala-lang.org/scala3/guides/migration/compatibility-intro.html&#34;&gt;interoperability&lt;/a&gt;, which means that as long as you are on Scala &lt;code&gt;2.13&lt;/code&gt; you are more than half-way there.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scala 3 is ... gluten-free!!!</title>
      <link>http://tedn.life/2021/02/21/scala-3-is-...-gluten-free/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2021/02/21/scala-3-is-...-gluten-free/</guid>
      <description>&lt;p&gt;A couple of month ago I started to have stomach cramps. First it was only once week, but then it was more or less constant.&lt;/p&gt;&#xA;&lt;p&gt;Funny enough I had to find out that (even) late(r) in life you &lt;a href=&#34;https://www.everydayhealth.com/news/developing-celiac-later-life-can-you-become-gluten-intolerant/&#34;&gt;can &amp;ldquo;become&amp;rdquo; gluten-sensitive/-intolerant&lt;/a&gt;. Means &amp;hellip; a couple of weeks ago I got myself tested and changed my diet (to (mostly) gluten-free) and (big surprise !!!) &amp;hellip; after 3 days I was pain free!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Elixir LDN 2019 - 3 languages in 3 minutes</title>
      <link>http://tedn.life/2019/08/01/code-elixir-ldn-2019-3-languages-in-3-minutes/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2019/08/01/code-elixir-ldn-2019-3-languages-in-3-minutes/</guid>
      <description>&lt;p&gt;Last week I was in London attending &lt;a href=&#34;https://codesync.global/conferences/code-elixir-ldn-2019/&#34;&gt;Code Elixir LDN 2019&lt;/a&gt; delivering a lightening talk on &lt;a href=&#34;https://github.com/rolandtritsch/elixir-ldn-2019&#34;&gt;3 languages in 3 minutes&lt;/a&gt; &amp;hellip;&lt;/p&gt;&#xA;&lt;iframe style=&#34;display:block; margin-top: 5px; margin-bottom: 10px; margin-left: auto; margin-right: auto; border:3px solid black;&#34; width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LoTHaKhHcWY&#34; frameborder=&#34;10&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;This was my first Elixir conference. We had about 100 people there. The conference was very well organized. From what I can see London is one the Elixir hotspots in Europe.&lt;/p&gt;&#xA;&lt;p&gt;All of the talks where good, but a couple of them where of even better value to me personally (because I am the newbie) &amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advent of Code ... Final cut (... and First cut :))</title>
      <link>http://tedn.life/2018/11/30/advent-of-code-...-final-cut-...-and-first-cut/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/11/30/advent-of-code-...-final-cut-...-and-first-cut/</guid>
      <description>&lt;p&gt;Today &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code 2018&lt;/a&gt; started &lt;a href=&#34;https://github.com/rolandtritsch/haskell-aoc-2018&#34;&gt;again&lt;/a&gt; (at 05:00am (GMT))!!!&lt;/p&gt;&#xA;&lt;p&gt;And &amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip; just in time &amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip; today I am also wrapping up &lt;a href=&#34;https://adventofcode.com/2017&#34;&gt;Advent of Code 2017&lt;/a&gt;!!!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://tedn.life/images/2018-11-30-aoc-final/tree.png&#34; alt=&#34;Tree&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;My first implementation was (obviously) in &lt;a href=&#34;https://github.com/rolandtritsch/scala-aoc-2017&#34;&gt;Scala&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And that one alone was interesting, because I also used &lt;a href=&#34;https://www.scalacheck.org&#34;&gt;ScalaCheck&lt;/a&gt; for property-based testing and &lt;a href=&#34;https://scalameter.github.io&#34;&gt;ScalaMeter&lt;/a&gt; to implement performance tests for all solutions.&lt;/p&gt;&#xA;&lt;p&gt;I then made the Scala code &lt;a href=&#34;https://github.com/portable-scala/sbt-crossproject&#34;&gt;cross-compile&lt;/a&gt; with &lt;a href=&#34;http://www.scala-native.org/en/v0.3.8&#34;&gt;ScalaNative&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;At the time I was also learning &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt; and spend some cycles to port the code to &lt;a href=&#34;https://github.com/rolandtritsch/kotlin-aoc-2018&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advent of Code 2017 ... Revolutions!!!</title>
      <link>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s talk about the Advent of Code &amp;hellip; &lt;a href=&#34;http://www.tritsch.org/2018/05/24/aoc-reloaded.html&#34;&gt;again&lt;/a&gt;!!!&lt;/p&gt;&#xA;&lt;p&gt;Last time we talked about a/the &lt;a href=&#34;https://github.com/rolandtritsch/scala-aoc-2017&#34;&gt;Scala&lt;/a&gt; implementation.&lt;/p&gt;&#xA;&lt;p&gt;This time around I figured that I need to understand what the hype about Kotlin is all about and decided to port my Scala solutions to &lt;a href=&#34;https://github.com/rolandtritsch/kotlin-aoc-2017&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;There is a separate blog post on what I think about &lt;a href=&#34;http://www.tritsch.org/2018/08/11/kotlin-the-better-java.html&#34;&gt;Kotlin&lt;/a&gt;, but overall it was a positive experience. I like Kotlin (but would not suggest/recommend it as a replacement for Scala).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advent of Code 2017 ... Reloaded!!!</title>
      <link>http://tedn.life/2018/05/24/advent-of-code-2017-...-reloaded/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/05/24/advent-of-code-2017-...-reloaded/</guid>
      <description>&lt;p&gt;OK &amp;hellip; it took me a while, but &amp;hellip; hopefully it was worth it!!!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-_Ytk8mebsng/TvN56L3aHoI/AAAAAAAAHjc/lPKJfTklQAA/s1600/37.jpg&#34; alt=&#34;Matrix Reloaded&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Last year at christmas I did the &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; and &amp;hellip; really liked it!!!&lt;/p&gt;&#xA;&lt;p&gt;If you do not know it, it is a series (25 of them) of code puzzles that need to be solved to unlock a/the christmas tree (every day (between Dec. 1st and Dec. 25th) a new/the next puzzle becomes available).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tenable new hire training ... and integrating sbt-release with sbt-github-release</title>
      <link>http://tedn.life/2018/05/04/tenable-new-hire-training-...-and-integrating-sbt-release-with-sbt-github-release/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/05/04/tenable-new-hire-training-...-and-integrating-sbt-release-with-sbt-github-release/</guid>
      <description>&lt;p&gt;The other day I was flying to the &lt;a href=&#34;https://www.tenable.com&#34;&gt;Tenable&lt;/a&gt; new hire training &lt;a href=&#34;http://www.baltimoresun.com/business/bs-bz-tenable-columbia-20171117-story.html&#34;&gt;in Columbia/MD&lt;/a&gt; and that means &amp;hellip; 8 hours of uninterrupted coding time!!!&lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.tenable.com&#34; title=&#34;Flight to Tenable HQ&#34;&gt;&lt;img src=&#34;http://tedn.life/images/2018-05-04-giter8/IAD.png&#34; alt=&#34;DUB2IAD&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;At the same time, I saw/found the &lt;a href=&#34;https://github.com/ohnosequences/sbt-github-release&#34;&gt;sbt-guthub-release plugin&lt;/a&gt; and started to wonder, if it would be possible to combine it with the &lt;a href=&#34;https://github.com/sbt/sbt-release&#34;&gt;sbt-release plugin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And while I was thinking about this I figured &amp;ldquo;what the hell&amp;rdquo;, why not creating another &lt;strong&gt;opinionated&lt;/strong&gt; giter8 template to bootstrap my scala projects, means at the end I decided to spend the 8 hours on bringing a couple of things together &amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assembling a Gatling (gun) ... how hard can it be?</title>
      <link>http://tedn.life/2018/03/07/assembling-a-gatling-gun-...-how-hard-can-it-be/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/03/07/assembling-a-gatling-gun-...-how-hard-can-it-be/</guid>
      <description>&lt;p&gt;Back to the roots!!!&lt;/p&gt;&#xA;&lt;p&gt;I am writing &lt;a href=&#34;https://gatling.io/&#34;&gt;Gatling&lt;/a&gt; tests (again :)). (Obviously) I used to do this (a lot :)), when I was with &lt;a href=&#34;https://www.gilt.com&#34;&gt;Gilt&lt;/a&gt; (for an obvious &lt;a href=&#34;https://flic.kr/p/aSfJyx&#34;&gt;reason&lt;/a&gt; :)).&lt;/p&gt;&#xA;&lt;p&gt;To get going again, I had to make the basics work &amp;hellip; again.&lt;/p&gt;&#xA;&lt;p&gt;The basics are: Make the &lt;a href=&#34;https://github.com/gatling/gatling-sbt&#34;&gt;sbt-gatling&lt;/a&gt; plugin work to build (end-to-end integration) tests/simulations and then create a &amp;ldquo;deployable&amp;rdquo; (fat) jar (using &lt;a href=&#34;https://github.com/sbt/sbt-assembly&#34;&gt;sbt-assembly&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;This proved to be more difficult than I thought (because this used to work).&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to make your options in the future suck less!!!</title>
      <link>http://tedn.life/2017/06/26/how-to-make-your-options-in-the-future-suck-less/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2017/06/26/how-to-make-your-options-in-the-future-suck-less/</guid>
      <description>&lt;p&gt;If you are here for some advise on how to invest your money (using options), you are in the wrong place.&lt;/p&gt;&#xA;&lt;p&gt;This is about how to use Scala Options in Scala Futures!!!&lt;/p&gt;&#xA;&lt;p&gt;Erik Bakker delivered an excellent &lt;a href=&#34;https://www.youtube.com/watch?v=hGMndafDcc8&#34;&gt;talk&lt;/a&gt; on this topic in 2015 at the ScalaDays in Amsterdam.&lt;/p&gt;&#xA;&lt;p&gt;On Sunday morning I was on Dad-duty driving Alexandros to a paint-ball battle and ended up in coffee shop with three hours of zone time. I decided to spend it on implementing &lt;a href=&#34;https://github.com/rolandtritsch/scala-unsuck&#34;&gt;some code&lt;/a&gt; so that I/we can play around with it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scala on Android - Gradle, Ensime and the Android UI samples</title>
      <link>http://tedn.life/2015/01/27/scala-on-android-gradle-ensime-and-the-android-ui-samples/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2015/01/27/scala-on-android-gradle-ensime-and-the-android-ui-samples/</guid>
      <description>Besides &lt;a href=&#34;http://blog.tritsch.org/2014/12/x-mas-project-1-pebble-hello-world-20.html&#34; target=&#34;_blank&#34;&gt;getting my first companion app done for my Pebble&lt;/a&gt;, I also spend some time on X-Mas to start porting &lt;a href=&#34;https://developer.android.com/samples/ui.html&#34; target=&#34;_blank&#34;&gt;the Android UI samples&lt;/a&gt; to &lt;a href=&#34;https://github.com/rolandtritsch/scala-android-ui-samples.git&#34; target=&#34;_blank&#34;&gt;Scala&lt;/a&gt;.&#xA;&#xA;&lt;br /&gt;&lt;br /&gt;The samples obviously use gradle. I normally use sbt to build my apps, but this time I decided to stick with gradle, because I wanted to make it easy for people to consume the code (and embracing a new build system might be too big of a step as a first step). It also gave me an opportunity to checkout the &lt;a href=&#34;https://github.com/saturday06/gradle-android-scala-plugin&#34;&gt;&lt;span id=&#34;goog_1801727830&#34;&gt;&lt;/span&gt;gradle-android-scala-plugin&lt;span id=&#34;goog_1801727831&#34;&gt;&lt;/span&gt;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I also enhanced the &lt;a href=&#34;https://github.com/rolandtritsch/gradle-ensime&#34; target=&#34;_blank&#34;&gt;gradle-ensime&lt;/a&gt;&amp;nbsp;plugin to make sure it generates a valid .ensime file for Android projects.&lt;br /&gt;&lt;br /&gt;Now I have &lt;a href=&#34;https://github.com/rolandtritsch/scala-android-ui-samples.git&#34; target=&#34;_blank&#34;&gt;a working structure&lt;/a&gt; in place. If you want to help with the porting effort, please create an issue to let everybody know that you want to port on of the samples, fork the repo and send me a pull-request to get your port into the repo.</description>
    </item>
    <item>
      <title>X-Mas Project 1: Pebble Hello World 2.0 - The companion edition (with Android, Scala, Macroid)</title>
      <link>http://tedn.life/2014/12/29/x-mas-project-1-pebble-hello-world-2.0-the-companion-edition-with-android-scala-macroid/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2014/12/29/x-mas-project-1-pebble-hello-world-2.0-the-companion-edition-with-android-scala-macroid/</guid>
      <description>I love Christmas!!!&lt;br /&gt;&lt;br /&gt;My wife turns the house into the home of all homes, I get to see my all (or at least most of) my friends and ... I get to work on special projects :).&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;https://images-blogger-opensocial.googleusercontent.com/gadgets/proxy?url=http%3A%2F%2F1.bp.blogspot.com%2F-JsjwA-wGtYI%2FVKDxq0CNO9I%2FAAAAAAAAE1s%2Fb7V5F9k3-eM%2Fs1600%2FIMG_0182.JPG&amp;amp;container=blogger&amp;amp;gadget=a&amp;amp;rewriteMime=image%2F*&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-JsjwA-wGtYI/VKDxq0CNO9I/AAAAAAAAE1s/b7V5F9k3-eM/s1600/IMG_0182.JPG&#34; height=&#34;200&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;My first special project was to extend the standard &lt;a href=&#34;http://developer.getpebble.com/getting-started/watchface-tutorial/part1/&#34; target=&#34;_blank&#34;&gt;Pebble Tutorial&lt;/a&gt; a little bit and show how to build a simple companion app that exchanges data with the watch.&lt;br /&gt;&lt;br /&gt;As a first step I added some text to the standard Pebble Tutorial. The second step was to implement a companion app that can change the text.&lt;br /&gt;&lt;br /&gt;This is not really a tutorial. Instead I will share the code and will highlight the changes and extension I made.&lt;br /&gt;&lt;br /&gt;The main value is in showing what can be done and also in the configuration of the build systems.&#xA;&#xA;&lt;br /&gt;&lt;br /&gt;To start I suggest you just follow the standard Pebble Tutorial and use &lt;a href=&#34;https://cloudpebble.net/&#34; target=&#34;_blank&#34;&gt;CloudPebble&lt;/a&gt; to build it.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-NUeP3XXP_3g/VKDx4c6IuJI/AAAAAAAAE10/oSH8WedI9D4/s1600/2014-12-22%2B15.21.09.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-NUeP3XXP_3g/VKDx4c6IuJI/AAAAAAAAE10/oSH8WedI9D4/s1600/2014-12-22%2B15.21.09.png&#34; height=&#34;200&#34; width=&#34;112&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://images-blogger-opensocial.googleusercontent.com/gadgets/proxy?url=http%3A%2F%2F2.bp.blogspot.com%2F-DzDhUtihhng%2FVKDyHHWuaVI%2FAAAAAAAAE18%2Fww7H2irubU4%2Fs1600%2FIMG_0181.JPG&amp;amp;container=blogger&amp;amp;gadget=a&amp;amp;rewriteMime=image%2F*&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-DzDhUtihhng/VKDyHHWuaVI/AAAAAAAAE18/ww7H2irubU4/s1600/IMG_0181.JPG&#34; height=&#34;200&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;You can then take a look at &lt;a href=&#34;https://github.com/rolandtritsch/pebble-watchface-tutorial&#34; target=&#34;_blank&#34;&gt;my Pebble code&lt;/a&gt; to see how to add the text at the top and the bottom. In my case I also decided I want to use &lt;a href=&#34;https://github.com/adobe-fonts/source-code-pro&#34; target=&#34;_blank&#34;&gt;a real geek font&lt;/a&gt;. The code is also waiting for an app to send a new text to display, but initially works without the Android app and will just display &#34;World&#34; as a default.&lt;br /&gt;&lt;br /&gt;Note: Right now the tick handler updates the time and the text to display. To save battery the tick handler gets only called when the minute changes, means when you send a new text to the phone you need to wait until the minute elapses before you can see the new text. Changing this to get updated every second (and make the colon flash every second) is an exercise for the reader :).&lt;br /&gt;&lt;br /&gt;You can then clone &lt;a href=&#34;https://github.com/rolandtritsch/macroid-pebble-hello-world&#34; target=&#34;_blank&#34;&gt;the Android app&lt;/a&gt;. I am assuming you are familiar with developing Scala apps on Android. The app is very simple and it should be very easy to make it work with your Pebble app.&lt;br /&gt;&lt;br /&gt;As a matter of fact you probably only need to go to CloudPebble and need to get the UUID of your Pebble app and need to update the Android code with it. Afterwards you should be able to compile and install the Android app on your phone.&lt;br /&gt;&lt;br /&gt;A couple of things that worthwhile pointing out are:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;In the build.sbt file I had to add PebbleKit to the ProGuard configuration to make sure ProGuard is not removing the PebbleKit from the class files&lt;/li&gt;&lt;li&gt;For the GUI I am using &lt;a href=&#34;http://macroid.github.io/&#34; target=&#34;_blank&#34;&gt;Macroid&lt;/a&gt; and to center the widgets I implemented a Tweak that sets the gravity. Not sure, if this is the right or best way to go about it&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;That&#39;s it. As I said, this is not a tutorial. Please do not expect that all of this will just work. Instead you have to learn how to build a Pebble app and how to build a Scala/Macroid app on Android and you can then use my code to make a simple companion app work.&lt;/div&gt;</description>
    </item>
    <item>
      <title>Scala, Android and BLE, because ...</title>
      <link>http://tedn.life/2014/07/27/scala-android-and-ble-because-.../</link>
      <pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2014/07/27/scala-android-and-ble-because-.../</guid>
      <description>... &lt;a href=&#34;https://www.youtube.com/watch?v=61a0qHFcQE4&#34;&gt;everything is better with bluetooth&lt;/a&gt; :).&lt;br /&gt;&lt;br /&gt;Originally I was thinking to do a presentation, but Martin convinced me to turn my talk for the &lt;a href=&#34;http://www.meetup.com/Dublin-Scala-users-group/events/194123242/&#34; target=&#34;_blank&#34;&gt;Scala Meetup in Dublin&lt;/a&gt; into &lt;a href=&#34;http://www.slideshare.net/RolandTritsch1/scala-android-ble-scala-meetup-dublin&#34; target=&#34;_blank&#34;&gt;a hands-on tutorial&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The main objective was to talk people through a couple of demos that can serve as starting points, so that they can start to do their own development.&lt;br /&gt;&lt;br /&gt;We talked about, how to write, compile and run ...&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/rolandtritsch/scala-android-meetup&#34; target=&#34;_blank&#34;&gt;your first Scala App&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/rolandtritsch/scala-android-meetup/releases/tag/step-2a&#34; target=&#34;_blank&#34;&gt;your first Macroid App&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/rolandtritsch/scaloid-hello-world&#34; target=&#34;_blank&#34;&gt;your first Scaloid App&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/rolandtritsch/scaloid-beacon-scanner&#34; target=&#34;_blank&#34;&gt;a simple BLE scanner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/rolandtritsch/scala-android-beacon-scanner&#34; target=&#34;_blank&#34;&gt;and a more complex weather station&lt;/a&gt; (using the &lt;a href=&#34;http://www.ti.com/ww/en/wireless_connectivity/sensortag/index.shtml&#34; target=&#34;_blank&#34;&gt;TI SensorTag&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&lt;div&gt;The slides are &lt;a href=&#34;http://www.slideshare.net/RolandTritsch1/scala-android-ble-scala-meetup-dublin&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Feel free to contact &lt;a href=&#34;mailto:roland@tritsch.org&#34; target=&#34;_blank&#34;&gt;me&lt;/a&gt;, if you have any questions.&lt;/div&gt;</description>
    </item>
    <item>
      <title>Scala on the Pebble - Exploring SDK 2.0 ...</title>
      <link>http://tedn.life/2014/02/06/scala-on-the-pebble-exploring-sdk-2.0-.../</link>
      <pubDate>Thu, 06 Feb 2014 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2014/02/06/scala-on-the-pebble-exploring-sdk-2.0-.../</guid>
      <description>... just kidding :).&lt;br /&gt;&lt;br /&gt;Reality is ... triggered by the &lt;a href=&#34;https://developer.getpebble.com/2/&#34;&gt;release of the Pebble SDK 2.0&lt;/a&gt; on Feb., 3rd (iOS only, more on this later) and after more than 20 years of JVM based software development I willingful decided to write some C code again!!!&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-NHELCe3_H7o/UvNHXk3ObfI/AAAAAAAAA3g/NFmAaAqaoHw/s1600/2014-02-06+08.24.03.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-NHELCe3_H7o/UvNHXk3ObfI/AAAAAAAAA3g/NFmAaAqaoHw/s1600/2014-02-06+08.24.03.jpg&#34; height=&#34;320&#34; width=&#34;181&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;And I liked it. Mainly because of &lt;a href=&#34;https://cloudpebble.net/ide/project/32563&#34;&gt;CloudPebble&lt;/a&gt;. As pointed out &lt;a href=&#34;http://blog.tritsch.org/2014/01/scala-on-android-start.html&#34;&gt;here&lt;/a&gt;, setting up a software development environment can be a daunting task. Not so with CloudPebble. Long term I will probably install the SDK, but to get something simple done fast and to experiment with the SDK and its capabilities it is a very interesting approach. Not to mention that it works using &lt;a href=&#34;http://blog.tritsch.org/2014/01/scala-on-chromebook-yes-we-can.html&#34;&gt;my ChromeBook&lt;/a&gt;.&#xA;&#xA;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;object width=&#34;320&#34; height=&#34;266&#34; class=&#34;BLOGGER-youtube-video&#34; classid=&#34;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; data-thumbnail-src=&#34;https://i1.ytimg.com/vi/dNG7xWBX0io/0.jpg&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;https://www.youtube.com/v/dNG7xWBX0io?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; /&gt;&lt;param name=&#34;bgcolor&#34; value=&#34;#FFFFFF&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;embed width=&#34;320&#34; height=&#34;266&#34;  src=&#34;https://www.youtube.com/v/dNG7xWBX0io?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; type=&#34;application/x-shockwave-flash&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;As mentioned in the Video, at the current point in time, because the Android SDK is still work in progress, there are a couple of things that you need to do to make this work. Mainly you need to &lt;a href=&#34;https://developer.getpebble.com/2/getting-started/&#34;&gt;install the Pebble 2.0 App on your phone and you then need to upgrade the firmware on your Watch to 2.0&lt;/a&gt;. What worked for me was to download the .abk and the .pbz files to my phone, open the file manager of choice and then installing them by first opening the apk and then the pbz file. With that you should be all set.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-OkRo7l0Kh_E/UvNKxYFxcPI/AAAAAAAAA3w/HT3kewuLJwg/s1600/2014-02-06+05.52.35-2.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-OkRo7l0Kh_E/UvNKxYFxcPI/AAAAAAAAA3w/HT3kewuLJwg/s1600/2014-02-06+05.52.35-2.jpg&#34; height=&#34;320&#34; width=&#34;181&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;To get started I used a &lt;a href=&#34;http://ninedof.wordpress.com/2013/12/02/pebble-sdk-2-0-tutorial-1-your-first-watchapp/&#34;&gt;tutorial&lt;/a&gt; and modified it a little bit (playing around with fonts). I also hooked up my CloudPebble account to my GitHub account and the final version of the source code is available &lt;a href=&#34;https://github.com/rolandtritsch/pebble-helloworld&#34;&gt;there&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
    </item>
    <item>
      <title>Scala on Android - A start ...</title>
      <link>http://tedn.life/2014/01/28/scala-on-android-a-start-.../</link>
      <pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2014/01/28/scala-on-android-a-start-.../</guid>
      <description>I don&#39;t know what your experience is, but ...&lt;br /&gt;&lt;br /&gt;... in my case, when I look at a new technology, one of the main (or first) hurdles is, that it takes some time to get the initial development environment up and running.&lt;br /&gt;&lt;br /&gt;This is why I figured it probably makes sense to polish and publish something that I did a couple of month ago: &lt;a href=&#34;https://github.com/rolandtritsch/scala-android-first/releases/tag/v1.2-basic&#34; target=&#34;_blank&#34;&gt;Porting the basic Android tutorial to Scala&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;object class=&#34;BLOGGER-youtube-video&#34; classid=&#34;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; data-thumbnail-src=&#34;https://ytimg.googleusercontent.com/vi/Bzb_yGJYlHk/0.jpg&#34; height=&#34;266&#34; width=&#34;320&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;https://www.youtube.com/v/Bzb_yGJYlHk?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; /&gt;&lt;param name=&#34;bgcolor&#34; value=&#34;#FFFFFF&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;embed width=&#34;320&#34; height=&#34;266&#34;  src=&#34;https://www.youtube.com/v/Bzb_yGJYlHk?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; type=&#34;application/x-shockwave-flash&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Enjoy :) ...</description>
    </item>
    <item>
      <title>Scala on a Chromebook? Yes, we can!!!</title>
      <link>http://tedn.life/2014/01/22/scala-on-a-chromebook-yes-we-can/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2014/01/22/scala-on-a-chromebook-yes-we-can/</guid>
      <description>A couple of weeks ago I got myself an Acer Chromebook and so far I am very happy with it. I use it as a tablet with a keyboard and carry it around with me a lot, but ...&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;object class=&#34;BLOGGER-youtube-video&#34; classid=&#34;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; data-thumbnail-src=&#34;https://ytimg.googleusercontent.com/vi/ybMOFBWJoaw/0.jpg&#34; height=&#34;266&#34; width=&#34;320&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;https://www.youtube.com/v/ybMOFBWJoaw?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; /&gt;&lt;param name=&#34;bgcolor&#34; value=&#34;#FFFFFF&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;embed width=&#34;320&#34; height=&#34;266&#34;  src=&#34;https://www.youtube.com/v/ybMOFBWJoaw?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; type=&#34;application/x-shockwave-flash&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;... sometimes I have an hour to kill in a coffee shop and would like to do some software development (in my case and these days mainly &lt;a href=&#34;http://www.scala-lang.org/&#34; target=&#34;_blank&#34;&gt;Scala&lt;/a&gt;) and started to wonder, if and how this is possible.&lt;br /&gt;&lt;br /&gt;The good news is ... you just have to think about it differently and (everything :)) becomes possible, means instead of running the software development environment on the box, you do what the Chromebook can do best and access a software development environment in the cloud (i.e. in my case an Ubuntu box on EC2).&#xA;&#xA;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;object class=&#34;BLOGGER-youtube-video&#34; classid=&#34;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; data-thumbnail-src=&#34;https://ytimg.googleusercontent.com/vi/YsZQ_YmY2nw/0.jpg&#34; height=&#34;266&#34; width=&#34;320&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;https://www.youtube.com/v/YsZQ_YmY2nw?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; /&gt;&lt;param name=&#34;bgcolor&#34; value=&#34;#FFFFFF&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;embed width=&#34;320&#34; height=&#34;266&#34;  src=&#34;https://www.youtube.com/v/YsZQ_YmY2nw?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; type=&#34;application/x-shockwave-flash&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;The &lt;a href=&#34;https://chrome.google.com/webstore/detail/secure-shell/pnhechapfaindjhompbnflcldabbghjo&#34; target=&#34;_blank&#34;&gt;SSH shell&lt;/a&gt; that I have mentioned can be installed from the Chrome Store and then you just need to create yourself an AWS account, upload you public SSH key, need to launch an Ubuntu instance (m1.medium works), need to &lt;a href=&#34;https://gist.github.com/rolandtritsch/8562183&#34; target=&#34;_blank&#34;&gt;install a couple of packages&lt;/a&gt; and you are on your way.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;https://github.com/rolandtritsch/scala-josephus&#34; target=&#34;_blank&#34;&gt;The code&lt;/a&gt; I showed is a solution to &lt;a href=&#34;http://en.wikipedia.org/wiki/Josephus_problem&#34; target=&#34;_blank&#34;&gt;Josephus Problem&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Some people said &#34;It can&#39;t be done!&#34;. I say &#34;Yes, we can!!!&#34;.</description>
    </item>
    <item>
      <title>To become or not to become ... a Sunday with Scala and Actors</title>
      <link>http://tedn.life/2013/10/07/to-become-or-not-to-become-...-a-sunday-with-scala-and-actors/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2013/10/07/to-become-or-not-to-become-...-a-sunday-with-scala-and-actors/</guid>
      <description>&lt;br /&gt;It is Sunday, the sun is shining ... in Ireland!!! What do you do? Right: You get your laptop and finally start to get your head around the actor model in Scala.&lt;br /&gt;&lt;br /&gt;In my case I tried to come up with a &lt;a href=&#34;https://github.com/rolandtritsch/scala-dining-philosophers&#34; target=&#34;_blank&#34;&gt;simulation&lt;/a&gt; for the &lt;a href=&#34;http://en.wikipedia.org/wiki/Dining_philosophers_problem&#34; target=&#34;_blank&#34;&gt;Dining Philosophers Problem&lt;/a&gt; (DPP). There are &lt;a href=&#34;https://github.com/akka/akka/blob/master/akka-samples/akka-sample-fsm/src/main/scala/DiningHakkersOnBecome.scala&#34; target=&#34;_blank&#34;&gt;implementations&lt;/a&gt; available, but I consolidated them and renamed the states and transitions to make it more obvious what is going on and used &lt;a href=&#34;http://plantuml.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;plantUML&lt;/a&gt; to come up with State Transition Diagrams (STDs) that show what is going on.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-d2ckmSiOAhA/UlQhNWghElI/AAAAAAAAAIc/D_mfNKQy80M/s1600/Philosopher.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;311&#34; src=&#34;http://3.bp.blogspot.com/-d2ckmSiOAhA/UlQhNWghElI/AAAAAAAAAIc/D_mfNKQy80M/s400/Philosopher.png&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The model detects potential deadlocks and asks the philosopher to put down all forks, before trying again.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;The epiphany of the day was that you need to use become() to model the states :).</description>
    </item>
    <item>
      <title>Teaching Scala @ TCD ... back to the roots</title>
      <link>http://tedn.life/2012/11/10/teaching-scala-@-tcd-...-back-to-the-roots/</link>
      <pubDate>Sat, 10 Nov 2012 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2012/11/10/teaching-scala-@-tcd-...-back-to-the-roots/</guid>
      <description>20 years ago I used to teach object-oriented programming (based on &lt;a href=&#34;http://en.wikipedia.org/wiki/Eiffel_(programming_language)&#34; target=&#34;_blank&#34;&gt;Eiffel&lt;/a&gt;) at &lt;a href=&#34;https://www.fbi.h-da.de/willkommen-beim-fachbereich-informatik.html&#34; target=&#34;_blank&#34;&gt;my old university&lt;/a&gt; in Germany.&lt;br /&gt;&lt;br /&gt;This week I got the chance to experience a deja-vu, because earlier this year I did run into &lt;a href=&#34;http://www.cs.tcd.ie/Glenn.Strong/&#34; target=&#34;_blank&#34;&gt;Glenn Strong&lt;/a&gt; who is teaching &lt;a href=&#34;https://www.scss.tcd.ie/disciplines/software_systems/fmg/fmg_web/courses/CS3016/&#34; target=&#34;_blank&#34;&gt;Functional Programming in TCD in Dublin&lt;/a&gt; and we started to develop the idea that it would be useful to add a &lt;a href=&#34;http://www.scala-lang.org/&#34; target=&#34;_blank&#34;&gt;Scala&lt;/a&gt; module to his &lt;a href=&#34;http://www.haskell.org/haskellwiki/Haskell&#34; target=&#34;_blank&#34;&gt;Haskell&lt;/a&gt; based lecture.&lt;br /&gt;&lt;br /&gt;The main idea was that the module could complement the lecture by exposing the students to a second functional programming language and at the same time &lt;a href=&#34;https://docs.google.com/a/tritsch.org/presentation/d/18jMvXmy3M9URVe0B-rlGxZ_rdnzV7OXKMfNDuu9rM6Q/edit#slide=id.p&#34; target=&#34;_blank&#34;&gt;highlight&lt;/a&gt; why at the current point in time Scala is the programming language of choice when large corporations decide to adopt a more functional programming paradigm (&lt;a href=&#34;http://www.gilt.com/&#34; target=&#34;_blank&#34;&gt;Gilt&lt;/a&gt; being one of them).&lt;br /&gt;&lt;br /&gt;In that context the module focused mainly on how well Scala co-exists with Java. The two real-world scenarios that got implemented in the lab exercises was to rewrite a piece of Java in Scala and to integrate Scala with existing Java source code. Feel free to &lt;a href=&#34;https://github.com/rolandtritsch/scala-tcd-funcprog&#34; target=&#34;_blank&#34;&gt;clone the repo&lt;/a&gt; and play with it yourself. My stuff is in the roland.tritsch folder.</description>
    </item>
    <item>
      <title>A starting point for ... Apache Felix, OSGi, Scala, Sbt</title>
      <link>http://tedn.life/2012/09/16/a-starting-point-for-...-apache-felix-osgi-scala-sbt/</link>
      <pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2012/09/16/a-starting-point-for-...-apache-felix-osgi-scala-sbt/</guid>
      <description>It is not a secret ...&lt;br /&gt;&lt;br /&gt;I like &lt;a href=&#34;http://blog.tritsch.org/2010/04/managing-complexity-with-osgi-in-and.html&#34; target=&#34;_blank&#34;&gt;OSGi&lt;/a&gt; and Scala ... and therefore it was only a question of time until I started to wonder, if there is anything that would prevent me from using OSGi from/with Scala. The short answer and the good news is ... nothing.&lt;br /&gt;&lt;br /&gt;I just &lt;a href=&#34;https://github.com/rolandtritsch/apache-felix-scala-tutorial&#34; target=&#34;_blank&#34;&gt;checked in&lt;/a&gt; my port of the original &lt;a href=&#34;http://felix.apache.org/site/apache-felix-osgi-tutorial.html&#34; target=&#34;_blank&#34;&gt;Apache Felix Tutorial&lt;/a&gt; to Scala. As mentioned in the README I do not want to claim that this boilerplate code, but it is a working development environment that you can use as a starting point for your own experiments.</description>
    </item>
  </channel>
</rss>

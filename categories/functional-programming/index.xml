<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on tedn.life</title>
    <link>http://tedn.life/categories/functional-programming/</link>
    <description>Recent content in Functional Programming on tedn.life</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 11 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tedn.life/categories/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advent of Code 2017 ... Revolutions!!!</title>
      <link>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</guid>
      <description>Let&amp;rsquo;s talk about the Advent of Code &amp;hellip; again!!!
Last time we talked about a/the Scala implementation.
This time around I figured that I need to understand what the hype about Kotlin is all about and decided to port my Scala solutions to Kotlin.
There is a separate blog post on what I think about Kotlin, but overall it was a positive experience. I like Kotlin (but would not suggest/recommend it as a replacement for Scala).</description>
    </item>
    
    <item>
      <title>Kotlin ... the better Java?</title>
      <link>http://tedn.life/2018/08/11/kotlin-...-the-better-java/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/08/11/kotlin-...-the-better-java/</guid>
      <description>Everybody is talking about Kotlin. Me too!!!
Obviously the question is: Is Kotlin the next better thing?
Is Kotlin going to replace Java? Is Kotlin going to replace Scala? Is Kotlin the next better language that will make Software Engineers (much) more productive?
To find out I ported my Scala Advent of Code solutions to Kotlin.
My main take aways are &amp;hellip;
 if you know Java, learning Kotlin will be easier and faster than learning Scala Kotlin is without a doubt &amp;ldquo;the better Java&amp;rdquo;  it compiles fast it runs fast it has very good tooling/IDE support (namely (obviously) the support in Intellij is first-class) it runs on Android hell &amp;hellip; it even runs on Raspberry Pi with Arrows it has a very nice (pure) functional programming library   if you know Scala, learning Kotlin will be even easier, but you will also feel that you are not gaining anything or even that you are loosing some capabilities that are valuable  Sooooo &amp;hellip; my exec summary is &amp;hellip;</description>
    </item>
    
    <item>
      <title>Advent of Code 2017 ... Reloaded!!!</title>
      <link>http://tedn.life/2018/05/24/advent-of-code-2017-...-reloaded/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/05/24/advent-of-code-2017-...-reloaded/</guid>
      <description>OK &amp;hellip; it took me a while, but &amp;hellip; hopefully it was worth it!!!
Last year at christmas I did the Advent of Code and &amp;hellip; really liked it!!!
If you do not know it, it is a series (25 of them) of code puzzles that need to be solved to unlock a/the christmas tree (every day (between Dec. 1st and Dec. 25th) a new/the next puzzle becomes available).
The puzzles do a lot of different things and will test your ability to come up with good/clever datastructures/algorithms.</description>
    </item>
    
    <item>
      <title>Category Theory for Programmers ... Reviewing THE course!</title>
      <link>http://tedn.life/2018/04/03/category-theory-for-programmers-...-reviewing-the-course/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/04/03/category-theory-for-programmers-...-reviewing-the-course/</guid>
      <description>A couple of weeks ago Angel pointed me to a very nice lecture: Category Theory for Programmers (from/by Bartosz Milewski).
Bartosz Milewski is a physisist, a philosopher (on computer science and life in general :)) and runs his own company to make the world a better place by means of Category Theory and Haskell :).
The course is long &amp;hellip;
 Category Theory 1.1: Motivation and Philosophy Category Theory 1.2: What is a category?</description>
    </item>
    
    <item>
      <title>How to make your options in the future suck less!!!</title>
      <link>http://tedn.life/2017/06/26/how-to-make-your-options-in-the-future-suck-less/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2017/06/26/how-to-make-your-options-in-the-future-suck-less/</guid>
      <description>If you are here for some advise on how to invest your money (using options), you are in the wrong place.
This is about how to use Scala Options in Scala Futures!!!
Erik Bakker delivered an excellent talk on this topic in 2015 at the ScalaDays in Amsterdam.
On Sunday morning I was on Dad-duty driving Alexandros to a paint-ball battle and ended up in coffee shop with three hours of zone time.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on tedn.life</title>
    <link>http://tedn.life/tags/kotlin/</link>
    <description>Recent content in Kotlin on tedn.life</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Aug 2020 16:11:59 +0100</lastBuildDate>
    <atom:link href="http://tedn.life/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code ... Final cut (... and First cut :))</title>
      <link>http://tedn.life/2018/11/30/advent-of-code-...-final-cut-...-and-first-cut/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/11/30/advent-of-code-...-final-cut-...-and-first-cut/</guid>
      <description>&lt;p&gt;Today &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code 2018&lt;/a&gt; started &lt;a href=&#34;https://github.com/rolandtritsch/haskell-aoc-2018&#34;&gt;again&lt;/a&gt; (at 05:00am (GMT))!!!&lt;/p&gt;&#xA;&lt;p&gt;And &amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip; just in time &amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;&amp;hellip; today I am also wrapping up &lt;a href=&#34;https://adventofcode.com/2017&#34;&gt;Advent of Code 2017&lt;/a&gt;!!!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://tedn.life/images/2018-11-30-aoc-final/tree.png&#34; alt=&#34;Tree&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;My first implementation was (obviously) in &lt;a href=&#34;https://github.com/rolandtritsch/scala-aoc-2017&#34;&gt;Scala&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And that one alone was interesting, because I also used &lt;a href=&#34;https://www.scalacheck.org&#34;&gt;ScalaCheck&lt;/a&gt; for property-based testing and &lt;a href=&#34;https://scalameter.github.io&#34;&gt;ScalaMeter&lt;/a&gt; to implement performance tests for all solutions.&lt;/p&gt;&#xA;&lt;p&gt;I then made the Scala code &lt;a href=&#34;https://github.com/portable-scala/sbt-crossproject&#34;&gt;cross-compile&lt;/a&gt; with &lt;a href=&#34;http://www.scala-native.org/en/v0.3.8&#34;&gt;ScalaNative&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;At the time I was also learning &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt; and spend some cycles to port the code to &lt;a href=&#34;https://github.com/rolandtritsch/kotlin-aoc-2018&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advent of Code 2017 ... Revolutions!!!</title>
      <link>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s talk about the Advent of Code &amp;hellip; &lt;a href=&#34;http://www.tritsch.org/2018/05/24/aoc-reloaded.html&#34;&gt;again&lt;/a&gt;!!!&lt;/p&gt;&#xA;&lt;p&gt;Last time we talked about a/the &lt;a href=&#34;https://github.com/rolandtritsch/scala-aoc-2017&#34;&gt;Scala&lt;/a&gt; implementation.&lt;/p&gt;&#xA;&lt;p&gt;This time around I figured that I need to understand what the hype about Kotlin is all about and decided to port my Scala solutions to &lt;a href=&#34;https://github.com/rolandtritsch/kotlin-aoc-2017&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;There is a separate blog post on what I think about &lt;a href=&#34;http://www.tritsch.org/2018/08/11/kotlin-the-better-java.html&#34;&gt;Kotlin&lt;/a&gt;, but overall it was a positive experience. I like Kotlin (but would not suggest/recommend it as a replacement for Scala).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kotlin ... the better Java?</title>
      <link>http://tedn.life/2018/08/11/kotlin-...-the-better-java/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      <guid>http://tedn.life/2018/08/11/kotlin-...-the-better-java/</guid>
      <description>&lt;p&gt;Everybody is talking about Kotlin. Me too!!!&lt;/p&gt;&#xA;&lt;p&gt;Obviously the question is: Is Kotlin the next better thing?&lt;/p&gt;&#xA;&lt;p&gt;Is Kotlin going to replace Java? Is Kotlin going to replace Scala? Is Kotlin the next better language that will make Software Engineers (much) more productive?&lt;/p&gt;&#xA;&lt;p&gt;To find out I ported my &lt;a href=&#34;https://github.com/rolandtritsch/scala-aoc-2017&#34;&gt;Scala&lt;/a&gt; &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; solutions to &lt;a href=&#34;https://github.com/rolandtritsch/kotlin-aoc-2017&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;My main take aways are &amp;hellip;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;if you know Java, learning Kotlin will be easier and faster than learning Scala&lt;/li&gt;&#xA;&lt;li&gt;Kotlin is without a doubt &amp;ldquo;the better Java&amp;rdquo;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;it compiles fast&lt;/li&gt;&#xA;&lt;li&gt;it runs fast&lt;/li&gt;&#xA;&lt;li&gt;it has very good tooling/IDE support (namely (obviously) the support in &lt;a href=&#34;https://kotlinlang.org/docs/tutorials/getting-started.html&#34;&gt;Intellij&lt;/a&gt; is first-class)&lt;/li&gt;&#xA;&lt;li&gt;it runs on Android&lt;/li&gt;&#xA;&lt;li&gt;hell &amp;hellip; it even runs on &lt;a href=&#34;https://hadihariri.com/2017/04/09/kotlin-on-raspberry-pi&#34;&gt;Raspberry Pi&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;with &lt;a href=&#34;https://arrow-kt.io&#34;&gt;Arrows&lt;/a&gt; it has a very nice (pure) functional programming library&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;if you know Scala, learning Kotlin will be even easier, but you will also feel that you are not gaining anything or even that you are loosing some capabilities that are &lt;a href=&#34;https://dzone.com/articles/kotlin-vs-scala-vs-java&#34;&gt;valuable&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Sooooo &amp;hellip; my exec summary is &amp;hellip;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on tedn.life</title>
    <link>http://tedn.life/tags/kotlin/</link>
    <description>Recent content in Kotlin on tedn.life</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tedn.life/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advent of Code ... Final cut (... and First cut :))</title>
      <link>http://tedn.life/2018/11/30/advent-of-code-...-final-cut-...-and-first-cut/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/11/30/advent-of-code-...-final-cut-...-and-first-cut/</guid>
      <description>Today Advent of Code 2018 started again (at 05:00am (GMT))!!!
And &amp;hellip;
&amp;hellip; just in time &amp;hellip;
&amp;hellip; today I am also wrapping up Advent of Code 2017!!!
My first implementation was (obviously) in Scala.
And that one alone was interesting, because I also used ScalaCheck for property-based testing and ScalaMeter to implement performance tests for all solutions.
I then made the Scala code cross-compile with ScalaNative.
At the time I was also learning Kotlin and spend some cycles to port the code to Kotlin.</description>
    </item>
    
    <item>
      <title>Advent of Code 2017 ... Revolutions!!!</title>
      <link>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/08/11/advent-of-code-2017-...-revolutions/</guid>
      <description>Let&amp;rsquo;s talk about the Advent of Code &amp;hellip; again!!!
Last time we talked about a/the Scala implementation.
This time around I figured that I need to understand what the hype about Kotlin is all about and decided to port my Scala solutions to Kotlin.
There is a separate blog post on what I think about Kotlin, but overall it was a positive experience. I like Kotlin (but would not suggest/recommend it as a replacement for Scala).</description>
    </item>
    
    <item>
      <title>Kotlin ... the better Java?</title>
      <link>http://tedn.life/2018/08/11/kotlin-...-the-better-java/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tedn.life/2018/08/11/kotlin-...-the-better-java/</guid>
      <description>Everybody is talking about Kotlin. Me too!!!
Obviously the question is: Is Kotlin the next better thing?
Is Kotlin going to replace Java? Is Kotlin going to replace Scala? Is Kotlin the next better language that will make Software Engineers (much) more productive?
To find out I ported my Scala Advent of Code solutions to Kotlin.
My main take aways are &amp;hellip;
 if you know Java, learning Kotlin will be easier and faster than learning Scala Kotlin is without a doubt &amp;ldquo;the better Java&amp;rdquo;  it compiles fast it runs fast it has very good tooling/IDE support (namely (obviously) the support in Intellij is first-class) it runs on Android hell &amp;hellip; it even runs on Raspberry Pi with Arrows it has a very nice (pure) functional programming library   if you know Scala, learning Kotlin will be even easier, but you will also feel that you are not gaining anything or even that you are loosing some capabilities that are valuable  Sooooo &amp;hellip; my exec summary is &amp;hellip;</description>
    </item>
    
  </channel>
</rss>